[gd_scene load_steps=14 format=2]

[ext_resource path="res://scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/Orb.tscn" type="PackedScene" id=2]
[ext_resource path="res://scripts/orbs/ShaderOrb.gd" type="Script" id=3]
[ext_resource path="res://lib/shaders/Vignette.shader" type="Shader" id=4]
[ext_resource path="res://lib/scripts/TargetFollow.gd" type="Script" id=5]
[ext_resource path="res://lib/scripts/VisualCollider.gd" type="Script" id=6]
[ext_resource path="res://lib/shaders/ChromaticAberration.shader" type="Shader" id=7]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

float rect(in vec2 st, in vec2 pos, in vec2 size, float smoothness) {
	float s = smoothness;
    vec2 uv = smoothstep(pos - s, pos, st) - smoothstep(pos + size, pos + size + s, st);
    return uv.x * uv.y;
}

float rect_outline(in vec2 st, in vec2 pos, in vec2 size, float thickness) {
    return rect(st, pos - thickness/2., size + thickness, .01) - rect(st, pos + thickness/2., size - thickness, .01);
}

uniform vec4 grid_color: hint_color = vec4(1.);
uniform float thickness = .02;

void fragment() {
	vec2 st = UV.xy;
	
	vec2 tile = fract(st * 10.);
	float grid = rect_outline(tile, vec2(.0), vec2(1.), thickness);
	
	ALBEDO = mix(vec3(.0), grid_color.rgb, grid);
	ALPHA = mix(.0, grid_color.a, grid);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/grid_color = Color( 0.25098, 0.431373, 0.494118, 1 )
shader_param/thickness = 0.025

[sub_resource type="SpatialMaterial" id=3]
next_pass = SubResource( 2 )
albedo_color = Color( 0.0847166, 0.0065, 0.13, 1 )

[sub_resource type="BoxShape" id=4]
extents = Vector3( 2, 4, 2 )

[sub_resource type="SpatialMaterial" id=5]
resource_local_to_scene = true

[sub_resource type="SpatialMaterial" id=6]
albedo_color = Color( 0.552941, 0.352941, 0.352941, 1 )

[node name="World" type="Spatial"]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.5, 0.866026, 0, -0.866025, 0.5, 0, 19, 12 )
cull_mask = 1048563
current = true
fov = 40.0
script = ExtResource( 5 )
target_path = NodePath("../Player")

[node name="Floor" type="CSGBox" parent="."]
width = 40.0
height = 0.002
depth = 40.0
material = SubResource( 3 )

[node name="Player" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.5, -0.75, 0.433013, 0, 0.5, 0.866025, -0.866025, -0.433013, 0.25, 0, 5, 0 )
layers = 11
shadow_enabled = true

[node name="VignetteOrb" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4, 0, 0 )
script = ExtResource( 3 )
description = "Vignette"
shader = ExtResource( 4 )

[node name="ColorAberrationOrb" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5 )
script = ExtResource( 3 )
description = "Aberração de Cor"
shader = ExtResource( 7 )

[node name="Pillar" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 0, 2 )
collision_layer = 3
script = ExtResource( 6 )

[node name="CollisionShape" type="CollisionShape" parent="Pillar"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4, 0 )
shape = SubResource( 4 )

[node name="Model" type="CSGBox" parent="Pillar"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.03544, 0 )
width = 4.0
height = 8.0
depth = 4.0
material = SubResource( 5 )

[node name="Pillar2" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, -4 )
collision_layer = 3
script = ExtResource( 6 )

[node name="CollisionShape" type="CollisionShape" parent="Pillar2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4, 0 )
shape = SubResource( 4 )

[node name="Model" type="CSGBox" parent="Pillar2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.03544, 0 )
width = 4.0
height = 8.0
depth = 4.0
material = SubResource( 6 )
